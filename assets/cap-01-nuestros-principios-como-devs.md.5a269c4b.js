import{_ as e,c as o,o as a,O as r}from"./chunks/framework.a6ecc25e.js";const q=JSON.parse('{"title":"Nuestros Principios como Desarrolladores","description":"","frontmatter":{},"headers":[],"relativePath":"cap-01-nuestros-principios-como-devs.md"}'),i={name:"cap-01-nuestros-principios-como-devs.md"},s=r('<h1 id="nuestros-principios-como-desarrolladores" tabindex="-1">Nuestros Principios como Desarrolladores <a class="header-anchor" href="#nuestros-principios-como-desarrolladores" aria-label="Permalink to &quot;Nuestros Principios como Desarrolladores&quot;">​</a></h1><blockquote><p><strong>Peor que usar un mal estándar o un estándar incorrecto es no seguir ninguno</strong>, de la misma forma, lo peor que podemos hacer es no tener ningún criterio para enfrentar los desarrollos. Para aumentar nuestra productividad, tanto individualmente como en equipo, debemos siempre seguir estándares y fijar criterios de desarrollo. Nuestro objetivo debería ser contar con una <em>“plataforma de desarrollo”</em> que nos evite tener que repensar problemas típicos y cotidianos, y concentrarnos solo en los problemas nuevos.</p></blockquote><p>Empecemos por el principio, por lo más básico y elemental... nuestros principios base.</p><h2 id="_1°-principio-rtfm-read-the-fucking-manual" tabindex="-1">1° Principio: RTFM <em>(&quot;Read The Fucking Manual&quot;)</em> <a class="header-anchor" href="#_1°-principio-rtfm-read-the-fucking-manual" aria-label="Permalink to &quot;1° Principio: RTFM _(&quot;Read The Fucking Manual&quot;)_&quot;">​</a></h2><p><em>“Lee El Maldito Manual”</em>, algo muy usado en los foros como respuesta hacia los novatos que lo último que hacen es leerlos (lamentablemente <em>todo</em> se encuentra ahí).</p><h2 id="_2°-principio-dry-don-t-repeat-yourself" tabindex="-1">2° Principio: DRY <em>(&quot;Don&#39;t Repeat Yourself&quot;)</em> <a class="header-anchor" href="#_2°-principio-dry-don-t-repeat-yourself" aria-label="Permalink to &quot;2° Principio: DRY _(&quot;Don&#39;t Repeat Yourself&quot;)_&quot;">​</a></h2><p><em>“No Te Repitas”</em> significa algo muy simple: si cuando desarrollas ves que al programar <em>“copias”</em> un código para <em>“pegarlo en otro lado”</em>, es muy probable que estés haciendo algo mal, ya que ese código debería estar aislado y ser usado a través de parámetros.</p><p>Generalmente no existe razón para tener que duplicar el código, si estamos muy apurados, seguro, lo pagaremos muy caro dentro de poco.</p><h2 id="_3°-principio-kiss-keep-it-simple-stupid" tabindex="-1">3° Principio: KISS - <em>(&quot;Keep It Simple, Stupid!&quot;)</em> <a class="header-anchor" href="#_3°-principio-kiss-keep-it-simple-stupid" aria-label="Permalink to &quot;3° Principio: KISS - _(&quot;Keep It Simple, Stupid!&quot;)_&quot;">​</a></h2><p>Hay una frase que dice <em>“la mejor arquitectura es la sencillez”</em>. La sencillez es escalable, si resolvemos pequeños problemas y luego los unimos, será más fácil que hacer un sistema complejo de entrada.</p><h2 id="_4°-principio-estandar-de-codificacion-php" tabindex="-1">4° Principio: Estándar de Codificación PHP <a class="header-anchor" href="#_4°-principio-estandar-de-codificacion-php" aria-label="Permalink to &quot;4° Principio: Estándar de Codificación PHP&quot;">​</a></h2><p>El lenguaje PHP y su comunidad, por años, no ha tenido ningún referente único para seguir un estándar, por consiguiente los desarrolladores usan o inventan el que más le quede cómodo. Evita crear un estándar propio. (leer sobre <a href="https://www.php-fig.org/psr/" target="_blank" rel="noreferrer"><strong>PSR</strong> o <strong>PHP Standar Recomendation</strong></a>).</p><h2 id="_5°-principio-escribir-el-codigo-en-ingles" tabindex="-1">5° Principio: Escribir el código en inglés <a class="header-anchor" href="#_5°-principio-escribir-el-codigo-en-ingles" aria-label="Permalink to &quot;5° Principio: Escribir el código en inglés&quot;">​</a></h2><p>Es una de las mejores practicas que podemos tener en nuestros proyectos. Cada vez es más necesario aprender inglés técnico, pues es considerado el <em>“idioma estándar”</em> respectivamente. Recuerde que el vocabulario técnico en inglés le permite mayor comprensión de los temas vinculados al desarrollo. Por otro lado, también facilita estar al día con tendencias y avances. Tener un buen nivel de inglés técnico puede ser el mayor diferencial en su carrera. No solo podrá desenvolverse en cualquier actividad profesional, sino que le abrirá las puertas a oportunidades.</p><div class="info custom-block"><p class="custom-block-title">Nota</p><p>Si prestas atención verás que en todos los ejemplos las llaves <code>{}</code> inician a la izquierda cuando es una clase o un método, no se usa el tag de cierre de php <code>?&gt;</code>, atributos y métodos privados iniciando con <code>_</code>, etcétera.</p></div>',15),n=[s];function t(c,l,d,p,u,m){return a(),o("div",null,n)}const g=e(i,[["render",t]]);export{q as __pageData,g as default};
