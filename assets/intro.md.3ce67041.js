import{_ as e,c as o,o as a,O as s}from"./chunks/framework.a6ecc25e.js";const h=JSON.parse('{"title":"Introducción","description":"","frontmatter":{},"headers":[],"relativePath":"intro.md"}'),r={name:"intro.md"},t=s('<h1 id="introduccion" tabindex="-1">Introducción <a class="header-anchor" href="#introduccion" aria-label="Permalink to &quot;Introducción&quot;">​</a></h1><p>Aprende de forma simple y definitiva POO para PHP.</p><blockquote><p><em>”Los Desarrolladores PHP debemos Profesionalizarnos”</em></p></blockquote><p>Se habla mayoritariamente de UML, desarrollos en 3 capas, lógica de negocios, persistencia, polimorfismo, frameworks, patrones de diseño, refactoring... todo esto es posible hacerlo con PHP.</p><blockquote><p>PHP nos permite hacer muchas cosas que son habituales en la POO. Por lo tanto, tenemos todas las herramientas para <em>&quot;evolucionar&quot;</em> y no quedarnos en las excusas.</p></blockquote><h2 id="programador-versus-desarrollador" tabindex="-1">Programador versus Desarrollador <a class="header-anchor" href="#programador-versus-desarrollador" aria-label="Permalink to &quot;Programador versus Desarrollador&quot;">​</a></h2><p>Desarrollar Orientado a Objetos va más allá que crear objetos aislados que solo contienen datos, programar usando algunos objetos es distinto a desarrollar 100% Orientado a Objetos, ser programador es distinto a ser un desarrollador, un sitio web no es lo mismo que un sistema web. Existen, además de los objetos, <em>&quot;Principios de Diseño (OO)&quot;</em>, <em>&quot;Patrones de Diseño (OO)&quot;</em>, el lenguaje de diseño UML, frameworks, etc, y todo es perfectamente aplicable usando PHP.</p><p>Es más, muchos de estos conceptos e ideas son independientes al lenguaje si este cumple con las características de la OO, cosa que sucede con PHP.</p><p>Finalmente, un programador resuelve problemas aislados usando un lenguaje, pero <strong>un desarrollador diseña e implementa una solución global</strong>, une los componentes en un único sistema integrado y es lo suficientemente inteligente y estratega para poder reutilizar la experiencia y conocimientos adquiridos en favor de los próximos desarrollos.</p><p>Los sistemas que van quedando atrás nunca serán un lastre porque podrán ser mantenidos con el mínimo costo posible, permitiendo que el desarrollador pueda afrontar nuevos y enriquecedores desafíos.</p><p>Todos estos detalles los percibimos claramente cuando nuestros desarrollos dejan de ser un <em>&quot;programa menor&quot;</em> y necesitamos crecer, pero vemos que con los conocimientos que contamos hasta el momento todo se nos hace cuesta arriba.</p><h2 id="la-culpa-es-enteramente-nuestra" tabindex="-1">La culpa es enteramente nuestra <a class="header-anchor" href="#la-culpa-es-enteramente-nuestra" aria-label="Permalink to &quot;La culpa es enteramente nuestra&quot;">​</a></h2><p>No podemos quejarnos que a la mayoría de los proyectos PHP se los desvalorice, se los trate como <em>&quot;algo menor&quot;</em>, <em>&quot;poco serio&quot;</em>, todo porque es un <em>&quot;simple lenguaje web&quot;</em> limitado en sus posibilidades.</p><p>El <em>&quot;Simple Lenguaje&quot;</em> lo hacemos todos, al ser <em>&quot;Simples Programadores PHP&quot;</em> y nuestras son las limitaciones fundamentales. Perfectamente podemos tratar de trabajar <em>&quot;más seriamente&quot;</em>.</p><p>PHP se está orientando a convertir en una <em>&quot;arquitectura&quot;</em> mucho más simple y directa. El proceso hace tiempo que inició.</p><h2 id="debemos-pasar-de-los-dichos-a-los-hechos" tabindex="-1">Debemos pasar de los dichos a los hechos <a class="header-anchor" href="#debemos-pasar-de-los-dichos-a-los-hechos" aria-label="Permalink to &quot;Debemos pasar de los dichos a los hechos&quot;">​</a></h2><p>¿Tú, qué vas a hacer? ¿Te vas a quedar donde estás o te vas a subir al tren?</p><p><strong>¿Eres parte del problema o parte de la solución?</strong></p><blockquote><p>Tenemos que especializarnos y profesionalizarnos, el mundo pide POO, arquitecturas, capas, etc, y habla en <em>&quot;UML&quot;</em>... tú, ¿en qué idioma hablas?</p></blockquote>',19),n=[t];function i(l,d,u,c,m,p){return a(),o("div",null,n)}const b=e(r,[["render",i]]);export{h as __pageData,b as default};
