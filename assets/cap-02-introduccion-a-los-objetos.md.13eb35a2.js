import{_ as e,c as o,o as a,O as s}from"./chunks/framework.a6ecc25e.js";const t="/php-poo/assets/cap-02-introduccion-a-los-objetos-1.a46356a3.jpeg",h=JSON.parse('{"title":"Introducci√≥n a los Objetos","description":"","frontmatter":{},"headers":[],"relativePath":"cap-02-introduccion-a-los-objetos.md"}'),n={name:"cap-02-introduccion-a-los-objetos.md"},r=s('<h1 id="introduccion-a-los-objetos" tabindex="-1">Introducci√≥n a los Objetos <a class="header-anchor" href="#introduccion-a-los-objetos" aria-label="Permalink to &quot;Introducci√≥n a los Objetos&quot;">‚Äã</a></h1><p>Aqu√≠ es donde inicia todo, el primer viaje con destino aprender las profundidades de la POO üòâ</p><blockquote><p><em>&quot;Un sistema complejo que funciona resulta invariablemente de la evoluci√≥n de un sistema simple que funcionaba. Un sistema complejo dise√±ado desde cero nunca funciona y no puede ser arreglado para que funcione. Tienes que comenzar de nuevo con un sistema simple que funcione.&quot;</em> ‚Äì John Gall</p></blockquote><h2 id="vacuidad-vaciar-todos-los-conocimientos" tabindex="-1">Vacuidad: vaciar todos los conocimientos <a class="header-anchor" href="#vacuidad-vaciar-todos-los-conocimientos" aria-label="Permalink to &quot;Vacuidad: vaciar todos los conocimientos&quot;">‚Äã</a></h2><p>Si tienes un vaso medio lleno no vas a poder recibir por completo toda la ense√±anza que te quiero transmitir, por consiguiente, <em>‚Äúvaciarse‚Äù</em> de todo lo que crees que sabes es lo m√°s importante, m√°s que acumular conocimientos y luego simplemente rechazar lo nuevo creyendo que eso <em>‚Äúya lo sabes‚Äù</em>.</p><p>As√≠ que de aqu√≠ en adelante, olvida todo lo que crees que sabes sobre objetos y empecemos de cero.</p><h2 id="la-sencillez-es-la-mejor-arquitectura" tabindex="-1">La sencillez es la mejor arquitectura <a class="header-anchor" href="#la-sencillez-es-la-mejor-arquitectura" aria-label="Permalink to &quot;La sencillez es la mejor arquitectura&quot;">‚Äã</a></h2><p>Los <em>‚Äúobjetos‚Äù</em> como concepto -fuera de la inform√°tica- existen desde antes de la programaci√≥n (obviamente).</p><p><strong>¬øQu√© es lo que intenta hacer entonces la Programaci√≥n Orientada a los Objetos (POO)?</strong></p><p>Lisa y llanamente intentar simplificar la complejidad <em>(‚Äúsimplificar las abstracciones‚Äù)</em> y tratar de representar de forma simple lo que vemos y manejamos todos los d√≠as... los objetos que nos rodean.</p><p><strong>Un ni√±o, cuando empieza a hablar, nos demuestra que ya entiende el concepto de <em>‚Äúobjetos‚Äù</em></strong>, empieza a nombrar esas <em>‚Äúcosas‚Äù</em>:</p><ul><li>vaso</li><li>agua</li><li>pap√°</li><li>mam√°</li><li>casa</li><li>guau guau <em>(‚Äúperro‚Äù)</em></li><li>etc.</li></ul><p>Todos estamos sumidos en un mundo que tiene reglas (sepamos o no que existen, nos afectan), como cuando tiramos un objeto y este cae (gravedad), cuando pisamos la cola de un gato y este llora (y probablemente nos ara√±e).</p><blockquote><p>Nos vamos dando cuenta que generalmente no manipulamos los objetos directamente ni tenemos un completo control sobre ellos, muchas veces solo interactuamos con ellos, por m√°s que no queramos que el gato se defienda, este lo har√°. Nos damos cuenta que cada uno tiene dentro una <em>‚Äúprogramaci√≥n‚Äù</em> que le dice c√≥mo reaccionar ante determinados est√≠mulos o situaciones, y descubrimos luego que un gato reacciona distinto de otro gato (a pesar que ambos son gatos) y que no es lo mismo la reacci√≥n de un perro con respecto a la de un gato (a pesar que entre ellos existe una relaci√≥n que los une como mam√≠feros).</p></blockquote><p><strong>Por lo tanto, as√≠ son los objetos:</strong> pueden ser de un tipo determinado (perro, gato), tambi√©n pertenecer a una misma familia (mam√≠feros) y a su vez ser √∫nicos (<em>‚Äúel gato llamado Felix‚Äù</em>)</p><h2 id="lo-mas-importante-es-detectar-los-objetos" tabindex="-1">Lo m√°s importante es detectar los objetos <a class="header-anchor" href="#lo-mas-importante-es-detectar-los-objetos" aria-label="Permalink to &quot;Lo m√°s importante es detectar los objetos&quot;">‚Äã</a></h2><p><img src="'+t+'" alt="cap-02-introduccion-a-los-objetos"></p><p>Entonces, la Programaci√≥n Orientada a Objetos no es m√°s que eso, detectar los objetos existentes en nuestro contexto real y construirlos como si fu√©ramos <em>‚ÄúDios‚Äù</em>, d√°ndoles un comportamiento para que estos sepan solos c√≥mo reaccionar ante la interacci√≥n con otros objetos.</p><p><strong>A esta actividad la llamaremos <em>‚Äúdise√±o‚Äù</em></strong> y ser√° cuando debamos decidir c√≥mo ser√°n y c√≥mo se comportar√°n nuestros objetos ante la interacci√≥n con otros objetos.</p><p>Nada m√°s y nada menos... y hemos logrado empezar a hablar del tema sin mostrar -hasta el momento - una sola l√≠nea de c√≥digo üòâ</p><h2 id="en-resumen" tabindex="-1">En resumen <a class="header-anchor" href="#en-resumen" aria-label="Permalink to &quot;En resumen&quot;">‚Äã</a></h2><p>Abre tu cabeza, borra todo lo que sabes hasta el momento de objetos y de c√≥digo, y empecemos de cero, es m√°s simple de lo que crees.</p><blockquote><p><em>&quot;La complejidad es destructiva. Chupa la sangre de los desarrolladores, hace que los productos sean dif√≠ciles de planificar, construir y probar, introduce problemas de seguridad y provoca la frustraci√≥n de usuarios finales y administradores&quot;</em> -- Ray Ozzie</p></blockquote>',23),i=[r];function c(l,m,d,u,p,b){return a(),o("div",null,i)}const j=e(n,[["render",c]]);export{h as __pageData,j as default};
